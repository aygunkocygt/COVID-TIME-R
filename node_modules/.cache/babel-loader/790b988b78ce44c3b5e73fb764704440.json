{"ast":null,"code":"var _jsxFileName = \"C:\\\\projeler\\\\corona-time\\\\src\\\\components\\\\CountryPicker\\\\CountryPicker.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = () => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries);\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: FormControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"global\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }, \"Global\"), fetchedCountries.map((country, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 55\n    }\n  }, country))));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["C:/projeler/corona-time/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","fetchCountries","CountryPicker","fetchedCountries","setFetchedCountries","fetchAPI","map","country","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,mBAA1C;AAIA,SAASC,cAAT,QAA+B,WAA/B;;AAGA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,QAAQ,GAAG,YAAY;AACzBD,MAAAA,mBAAmB,CAAC,MAAMH,cAAP,CAAnB;AACH,KAFD;;AAGAI,IAAAA,QAAQ;AACX,GALQ,EAKP,CAACD,mBAAD,CALO,CAAT;AAOA,sBACG,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEJ,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEMG,gBAAgB,CAACG,GAAjB,CAAqB,CAACC,OAAD,EAAUC,CAAV,kBAAgB;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAED,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,OAAjC,CAArC,CAFN,CADJ,CADH;AAQH,CAlBD;;AAoBA,eAAeL,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\n\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\n\r\nconst CountryPicker = () => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries);\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    return (\r\n       <FormControl className={FormControl}>\r\n           <NativeSelect>\r\n               <option value=\"global\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;"]},"metadata":{},"sourceType":"module"}