{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\projeler\\\\corona-time\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\projeler\\\\corona-time\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\projeler\\\\corona-time\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{fetchDailyData}from'../../api';import{Line,Bar}from'react-chartjs-2';import styles from'./Chart.module.css';var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,deaths=_ref$data.deaths,recovered=_ref$data.recovered,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData.length?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Enfekte',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Ölüm',borderColor:'red',backgroundColor:'rgba(255,0,0,0.5)',fill:true}]}}):null;var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:['Enfekte','İyileşen','Ölüm'],datasets:[{label:'İnsan',backgroundColor:['rgba(0,0,255, 0.5)','rgba(0,255,0, 0.5)','rgba(255,0,0, 0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"\".concat(country,\" - G\\xFCncel Durum\")}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["C:/projeler/corona-time/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":"4bAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAyD,oBAAtDC,IAAsD,CAA9CC,SAA8C,WAA9CA,SAA8C,CAAnCC,MAAmC,WAAnCA,MAAmC,CAA3BC,SAA2B,WAA3BA,SAA2B,CAAdC,OAAc,MAAdA,OAAc,eACjCX,QAAQ,CAAC,EAAD,CADyB,wCAC5DY,SAD4D,eACjDC,YADiD,eAGnEZ,SAAS,CAAC,UAAM,CACZ,GAAMa,CAAAA,QAAQ,2FAAG,+IACbD,YADa,uBACMX,CAAAA,cAAc,EADpB,qHAAH,kBAARY,CAAAA,QAAQ,2CAAd,CAIAA,QAAQ,GACX,CANQ,CAMN,EANM,CAAT,CAQA,GAAMC,CAAAA,SAAS,CACXH,SAAS,CAACI,MAAV,cAEA,oBAAC,IAAD,EACA,IAAI,CAAE,CACFC,MAAM,CAAEL,SAAS,CAACM,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAAd,CADN,CAEFC,QAAQ,CAAE,CAAC,CACPb,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGV,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAnB,EAAd,CADC,CAEPa,KAAK,CAAE,SAFA,CAGPC,WAAW,CAAE,SAHN,CAIPC,IAAI,CAAE,IAJC,CAAD,CAKP,CACChB,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGT,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAhB,EAAd,CADP,CAECY,KAAK,CAAE,MAFR,CAGCC,WAAW,CAAE,KAHd,CAICE,eAAe,CAAE,mBAJlB,CAKCD,IAAI,CAAE,IALP,CALO,CAFR,CADN,EAFA,CAkBM,IAnBV,CAsBA,GAAME,CAAAA,QAAQ,CACVjB,SAAS,cAEL,oBAAC,GAAD,EACA,IAAI,CAAE,CACFS,MAAM,CAAE,CAAC,SAAD,CAAY,UAAZ,CAAwB,MAAxB,CADN,CAEFG,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE,OADA,CAEPG,eAAe,CAAE,CACb,oBADa,CAEb,oBAFa,CAGb,oBAHa,CAFV,CAOPjB,IAAI,CAAG,CAACC,SAAS,CAACkB,KAAX,CAAkBhB,SAAS,CAACgB,KAA5B,CAAmCjB,MAAM,CAACiB,KAA1C,CAPA,CAAD,CAFR,CADN,CAaA,OAAO,CAAE,CACLC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADH,CAELC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAAiBE,IAAI,WAAInB,OAAJ,sBAArB,CAFF,CAbT,EAFK,CAqBN,IAtBP,CAyBA,mBACG,2BAAK,SAAS,CAAEN,MAAM,CAAC0B,SAAvB,EACKpB,OAAO,CAAGc,QAAH,CAAcV,SAD1B,CADH,CAMH,CAhED,CAkEA,cAAeT,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n        <Line \r\n        data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({ confirmed }) => confirmed),\r\n                label: 'Enfekte',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n            }, {\r\n                data: dailyData.map(({ deaths }) => deaths),\r\n                label: 'Ölüm',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n            }],\r\n        }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed \r\n        ? (\r\n            <Bar\r\n            data={{\r\n                labels: ['Enfekte', 'İyileşen', 'Ölüm'],\r\n                datasets: [{\r\n                    label: 'İnsan',\r\n                    backgroundColor: [\r\n                        'rgba(0,0,255, 0.5)',\r\n                        'rgba(0,255,0, 0.5)',\r\n                        'rgba(255,0,0, 0.5)',\r\n                    ],\r\n                    data : [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: { display: true, text:`${country} - Güncel Durum`},\r\n            }}\r\n\r\n             />\r\n        ): null\r\n    );\r\n\r\n    return (\r\n       <div className={styles.container}>\r\n           {country ? barChart : lineChart }\r\n       </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}